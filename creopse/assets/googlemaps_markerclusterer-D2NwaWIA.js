import{d}from"./fast-equals-BZzMcSdc.js";import{S as M}from"./supercluster-C48kVH5C.js";function C(i,e){var t={};for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&e.indexOf(r)<0&&(t[r]=i[r]);if(i!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(i);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(i,r[s])&&(t[r[s]]=i[r[s]]);return t}class a{static isAdvancedMarkerAvailable(e){return google.maps.marker&&e.getMapCapabilities().isAdvancedMarkersAvailable===!0}static isAdvancedMarker(e){return google.maps.marker&&e instanceof google.maps.marker.AdvancedMarkerElement}static setMap(e,t){this.isAdvancedMarker(e)?e.map=t:e.setMap(t)}static getPosition(e){if(this.isAdvancedMarker(e)){if(e.position){if(e.position instanceof google.maps.LatLng)return e.position;if(Number.isFinite(e.position.lat)&&Number.isFinite(e.position.lng))return new google.maps.LatLng(e.position.lat,e.position.lng)}return new google.maps.LatLng(null)}return e.getPosition()}static getVisible(e){return this.isAdvancedMarker(e)?!0:e.getVisible()}}class u{constructor({markers:e,position:t}){this.markers=[],e&&(this.markers=e),t&&(t instanceof google.maps.LatLng?this._position=t:this._position=new google.maps.LatLng(t))}get bounds(){if(this.markers.length===0&&!this._position)return;const e=new google.maps.LatLngBounds(this._position,this._position);for(const t of this.markers)e.extend(a.getPosition(t));return e}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter(e=>a.getVisible(e)).length}push(e){this.markers.push(e)}delete(){this.marker&&(a.setMap(this.marker,null),this.marker=void 0),this.markers.length=0}}function h(i,e="assertion failed"){if(i==null)throw Error(e)}class v{constructor({maxZoom:e=16}){this.maxZoom=e}noop({markers:e}){return L(e)}}const L=i=>i.map(t=>new u({position:a.getPosition(t),markers:[t]}));class b extends v{constructor(e){var{maxZoom:t,radius:r=60}=e,s=C(e,["maxZoom","radius"]);super({maxZoom:t}),this.markers=[],this.clusters=[],this.state={zoom:-1},this.superCluster=new M(Object.assign({maxZoom:this.maxZoom,radius:r},s))}calculate(e){let t=!1,r=e.map.getZoom();h(r),r=Math.round(r);const s={zoom:r};if(!d(e.markers,this.markers)){t=!0,this.markers=[...e.markers];const n=this.markers.map(o=>{const c=a.getPosition(o);return{type:"Feature",geometry:{type:"Point",coordinates:[c.lng(),c.lat()]},properties:{marker:o}}});this.superCluster.load(n)}return t||(this.state.zoom<=this.maxZoom||s.zoom<=this.maxZoom)&&(t=!d(this.state,s)),this.state=s,e.markers.length===0?(this.clusters=[],{clusters:this.clusters,changed:t}):(t&&(this.clusters=this.cluster(e)),{clusters:this.clusters,changed:t})}cluster({map:e}){const t=e.getZoom();return h(t),this.superCluster.getClusters([-180,-90,180,90],Math.round(t)).map(r=>this.transformCluster(r))}transformCluster({geometry:{coordinates:[e,t]},properties:r}){if(r.cluster)return new u({markers:this.superCluster.getLeaves(r.cluster_id,1/0).map(n=>n.properties.marker),position:{lat:t,lng:e}});const s=r.marker;return new u({markers:[s],position:a.getPosition(s)})}}class x{constructor(e,t){this.markers={sum:e.length};const r=t.map(n=>n.count),s=r.reduce((n,o)=>n+o,0);this.clusters={count:t.length,markers:{mean:s/t.length,sum:s,min:Math.min(...r),max:Math.max(...r)}}}}class E{render({count:e,position:t},r,s){const o=`<svg fill="${e>Math.max(10,r.clusters.markers.mean)?"#ff0000":"#0000ff"}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240" width="50" height="50">
<circle cx="120" cy="120" opacity=".6" r="70" />
<circle cx="120" cy="120" opacity=".3" r="90" />
<circle cx="120" cy="120" opacity=".2" r="110" />
<text x="50%" y="50%" style="fill:#fff" text-anchor="middle" font-size="50" dominant-baseline="middle" font-family="roboto,arial,sans-serif">${e}</text>
</svg>`,c=`Cluster of ${e} markers`,m=Number(google.maps.Marker.MAX_ZINDEX)+e;if(a.isAdvancedMarkerAvailable(s)){const p=new DOMParser().parseFromString(o,"image/svg+xml").documentElement;p.setAttribute("transform","translate(0 25)");const k={map:s,position:t,zIndex:m,title:c,content:p};return new google.maps.marker.AdvancedMarkerElement(k)}const f={position:t,zIndex:m,title:c,icon:{url:`data:image/svg+xml;base64,${btoa(o)}`,anchor:new google.maps.Point(25,25)}};return new google.maps.Marker(f)}}function w(i,e){for(let t in e.prototype)i.prototype[t]=e.prototype[t]}class g{constructor(){w(g,google.maps.OverlayView)}}var l;(function(i){i.CLUSTERING_BEGIN="clusteringbegin",i.CLUSTERING_END="clusteringend",i.CLUSTER_CLICK="click",i.GMP_CLICK="gmp-click"})(l||(l={}));const y=(i,e,t)=>{e.bounds&&t.fitBounds(e.bounds)};class P extends g{constructor({map:e,markers:t=[],algorithmOptions:r={},algorithm:s=new b(r),renderer:n=new E,onClusterClick:o=y}){super(),this.map=null,this.idleListener=null,this.markers=[...t],this.clusters=[],this.algorithm=s,this.renderer=n,this.onClusterClick=o,e&&this.setMap(e)}addMarker(e,t){this.markers.includes(e)||(this.markers.push(e),t||this.render())}addMarkers(e,t){e.forEach(r=>{this.addMarker(r,!0)}),t||this.render()}removeMarker(e,t){const r=this.markers.indexOf(e);return r===-1?!1:(a.setMap(e,null),this.markers.splice(r,1),t||this.render(),!0)}removeMarkers(e,t){let r=!1;return e.forEach(s=>{r=this.removeMarker(s,!0)||r}),r&&!t&&this.render(),r}clearMarkers(e){this.markers.length=0,e||this.render()}render(){const e=this.getMap();if(e instanceof google.maps.Map&&e.getProjection()){google.maps.event.trigger(this,l.CLUSTERING_BEGIN,this);const{clusters:t,changed:r}=this.algorithm.calculate({markers:this.markers,map:e,mapCanvasProjection:this.getProjection()});if(r||r==null){const s=new Set;for(const o of t)o.markers.length==1&&s.add(o.markers[0]);const n=[];for(const o of this.clusters)o.marker!=null&&(o.markers.length==1?s.has(o.marker)||a.setMap(o.marker,null):n.push(o.marker));this.clusters=t,this.renderClusters(),requestAnimationFrame(()=>n.forEach(o=>a.setMap(o,null)))}google.maps.event.trigger(this,l.CLUSTERING_END,this)}}onAdd(){const e=this.getMap();h(e),this.idleListener=e.addListener("idle",this.render.bind(this)),this.render()}onRemove(){this.idleListener&&google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach(e=>a.setMap(e,null)),this.clusters.forEach(e=>e.delete()),this.clusters=[]}renderClusters(){const e=new x(this.markers,this.clusters),t=this.getMap();this.clusters.forEach(r=>{if(r.markers.length===1)r.marker=r.markers[0];else if(r.marker=this.renderer.render(r,e,t),r.markers.forEach(s=>a.setMap(s,null)),this.onClusterClick){const s=a.isAdvancedMarker(r.marker)?l.GMP_CLICK:l.CLUSTER_CLICK;r.marker.addListener(s,n=>{google.maps.event.trigger(this,l.CLUSTER_CLICK,r),this.onClusterClick(n,r,t)})}a.setMap(r.marker,t)})}}export{P as M};
