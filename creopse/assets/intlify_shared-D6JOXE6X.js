/*!
  * shared v9.14.4
  * (c) 2025 kazuya kawaguchi
  * Released under the MIT License.
  */const j=typeof window<"u",h=(t,e=!1)=>e?Symbol.for(t):Symbol(t),w=(t,e,s)=>y({l:t,k:e,s}),y=t=>JSON.stringify(t).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),S=t=>typeof t=="number"&&isFinite(t),m=t=>g(t)==="[object Date]",A=t=>g(t)==="[object RegExp]",T=t=>b(t)&&Object.keys(t).length===0,_=Object.assign,d=Object.create,f=(t=null)=>d(t);let a;const E=()=>a||(a=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:f());function N(t){return t.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const O=Object.prototype.hasOwnProperty;function P(t,e){return O.call(t,e)}const u=Array.isArray,l=t=>typeof t=="function",x=t=>typeof t=="string",D=t=>typeof t=="boolean",c=t=>t!==null&&typeof t=="object",F=t=>c(t)&&l(t.then)&&l(t.catch),p=Object.prototype.toString,g=t=>p.call(t),b=t=>{if(!c(t))return!1;const e=Object.getPrototypeOf(t);return e===null||e.constructor===Object},J=t=>t==null?"":u(t)||b(t)&&t.toString===p?JSON.stringify(t,null,2):String(t);function q(t,e=""){return t.reduce((s,o,r)=>r===0?s+o:s+e+o,"")}function B(t){let e=t;return()=>++e}function C(t,e){typeof console<"u"&&(console.warn("[intlify] "+t),e&&console.warn(e.stack))}const i=t=>!c(t)||u(t);function I(t,e){if(i(t)||i(e))throw new Error("Invalid value");const s=[{src:t,des:e}];for(;s.length;){const{src:o,des:r}=s.pop();Object.keys(o).forEach(n=>{n!=="__proto__"&&(c(o[n])&&!c(r[n])&&(r[n]=Array.isArray(o[n])?[]:f()),i(r[n])||i(o[n])?r[n]=o[n]:s.push({src:o[n],des:r[n]}))})}}export{x as a,u as b,b as c,f as d,_ as e,D as f,A as g,c as h,l as i,P as j,B as k,E as l,S as m,T as n,m as o,N as p,q,F as r,w as s,J as t,h as u,j as v,C as w,I as x};
