import{C as b,P as m,i as Q}from"./ckeditor_ckeditor5-core-c8d003a2.js";import{f}from"./ckeditor_ckeditor5-utils-df07b536.js";import"./ckeditor_ckeditor5-engine-af85ebf5.js";import{E as v}from"./ckeditor_ckeditor5-enter-27538ad0.js";import{D as B}from"./ckeditor_ckeditor5-typing-70b03be4.js";import{B as g}from"./ckeditor_ckeditor5-ui-a35c6a55.js";import"./color-convert-6fc98488.js";import"./vanilla-colorful-3f59310b.js";/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */class E extends b{refresh(){this.value=this._getValue(),this.isEnabled=this._checkEnabled()}execute(e={}){const o=this.editor.model,t=o.schema,s=o.document.selection,n=Array.from(s.getSelectedBlocks()),c=e.forceValue===void 0?!this.value:e.forceValue;o.change(u=>{if(!c)this._removeQuote(u,n.filter(d));else{const r=n.filter(i=>d(i)||p(t,i));this._applyQuote(u,r)}})}_getValue(){const e=this.editor.model.document.selection,o=f(e.getSelectedBlocks());return!!(o&&d(o))}_checkEnabled(){if(this.value)return!0;const e=this.editor.model.document.selection,o=this.editor.model.schema,t=f(e.getSelectedBlocks());return t?p(o,t):!1}_removeQuote(e,o){h(e,o).reverse().forEach(t=>{if(t.start.isAtStart&&t.end.isAtEnd){e.unwrap(t.start.parent);return}if(t.start.isAtStart){const n=e.createPositionBefore(t.start.parent);e.move(t,n);return}t.end.isAtEnd||e.split(t.end);const s=e.createPositionAfter(t.end.parent);e.move(t,s)})}_applyQuote(e,o){const t=[];h(e,o).reverse().forEach(s=>{let n=d(s.start);n||(n=e.createElement("blockQuote"),e.wrap(s,n)),t.push(n)}),t.reverse().reduce((s,n)=>s.nextSibling==n?(e.merge(e.createPositionAfter(s)),s):n)}}function d(l){return l.parent.name=="blockQuote"?l.parent:null}function h(l,e){let o,t=0;const s=[];for(;t<e.length;){const n=e[t],c=e[t+1];o||(o=l.createPositionBefore(n)),(!c||n.nextSibling!=c)&&(s.push(l.createRange(o,l.createPositionAfter(n))),o=null),t++}return s}function p(l,e){const o=l.checkChild(e.parent,"blockQuote"),t=l.checkChild(["$root","blockQuote"],e);return o&&t}/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */class x extends m{static get pluginName(){return"BlockQuoteEditing"}static get requires(){return[v,B]}init(){const e=this.editor,o=e.model.schema;e.commands.add("blockQuote",new E(e)),o.register("blockQuote",{inheritAllFrom:"$container"}),e.conversion.elementToElement({model:"blockQuote",view:"blockquote"}),e.model.document.registerPostFixer(c=>{const u=e.model.document.differ.getChanges();for(const r of u)if(r.type=="insert"){const i=r.position.nodeAfter;if(!i)continue;if(i.is("element","blockQuote")&&i.isEmpty)return c.remove(i),!0;if(i.is("element","blockQuote")&&!o.checkChild(r.position,i))return c.unwrap(i),!0;if(i.is("element")){const k=c.createRangeIn(i);for(const a of k.getItems())if(a.is("element","blockQuote")&&!o.checkChild(c.createPositionBefore(a),a))return c.unwrap(a),!0}}else if(r.type=="remove"){const i=r.position.parent;if(i.is("element","blockQuote")&&i.isEmpty)return c.remove(i),!0}return!1});const t=this.editor.editing.view.document,s=e.model.document.selection,n=e.commands.get("blockQuote");this.listenTo(t,"enter",(c,u)=>{if(!s.isCollapsed||!n.value)return;s.getLastPosition().parent.isEmpty&&(e.execute("blockQuote"),e.editing.view.scrollToTheSelection(),u.preventDefault(),c.stop())},{context:"blockquote"}),this.listenTo(t,"delete",(c,u)=>{if(u.direction!="backward"||!s.isCollapsed||!n.value)return;const r=s.getLastPosition().parent;r.isEmpty&&!r.previousSibling&&(e.execute("blockQuote"),e.editing.view.scrollToTheSelection(),u.preventDefault(),c.stop())},{context:"blockquote"})}}/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */class P extends m{static get pluginName(){return"BlockQuoteUI"}init(){const e=this.editor,o=e.t;e.ui.componentFactory.add("blockQuote",t=>{const s=e.commands.get("blockQuote"),n=new g(t);return n.set({label:o("Block quote"),icon:Q.quote,tooltip:!0,isToggleable:!0}),n.bind("isOn","isEnabled").to(s,"value","isEnabled"),this.listenTo(n,"execute",()=>{e.execute("blockQuote"),e.editing.view.focus()}),n})}}/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */class D extends m{static get requires(){return[x,P]}static get pluginName(){return"BlockQuote"}}export{D as B};
