const r=Symbol("singleComment"),h=Symbol("multiComment"),C=()=>"",x=(t,n,a)=>t.slice(n,a).replace(/[^ \t\r\n]/g," "),b=(t,n)=>{let a=n-1,f=0;for(;t[a]==="\\";)a-=1,f+=1;return!!(f%2)};function W(t,{whitespace:n=!0,trailingCommas:a=!1}={}){if(typeof t!="string")throw new TypeError(`Expected argument \`jsonString\` to be a \`string\`, got \`${typeof t}\``);const f=n?x:C;let u=!1,l=!1,s=0,i="",p="",o=-1;for(let e=0;e<t.length;e++){const c=t[e],m=t[e+1];if(!l&&c==='"'&&(b(t,e)||(u=!u)),!u)if(!l&&c+m==="//")i+=t.slice(s,e),s=e,l=r,e++;else if(l===r&&c+m===`\r
`){e++,l=!1,i+=f(t,s,e),s=e;continue}else if(l===r&&c===`
`)l=!1,i+=f(t,s,e),s=e;else if(!l&&c+m==="/*"){i+=t.slice(s,e),s=e,l=h,e++;continue}else if(l===h&&c+m==="*/"){e++,l=!1,i+=f(t,s,e+1),s=e+1;continue}else a&&!l&&(o!==-1?c==="}"||c==="]"?(i+=t.slice(s,e),p+=f(i,0,1)+i.slice(1),i="",s=e,o=-1):c!==" "&&c!=="	"&&c!=="\r"&&c!==`
`&&(i+=t.slice(s,e),s=e,o=-1):c===","&&(p+=i+t.slice(s,e),i="",s=e,o=e))}const d=l===r?f(t,s):t.slice(s);return p+i+d}export{W as s};
