const a="[a-fA-F\\d:]",d=e=>e&&e.includeBoundaries?`(?:(?<=\\s|^)(?=${a})|(?<=${a})(?=\\s|$))`:"",c="(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}",$="[a-fA-F\\d]{1,4}",x=`
(?:
(?:${$}:){7}(?:${$}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8
(?:${$}:){6}(?:${c}|:${$}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4
(?:${$}:){5}(?::${c}|(?::${$}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4
(?:${$}:){4}(?:(?::${$}){0,1}:${c}|(?::${$}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4
(?:${$}:){3}(?:(?::${$}){0,2}:${c}|(?::${$}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4
(?:${$}:){2}(?:(?::${$}){0,3}:${c}|(?::${$}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4
(?:${$}:){1}(?:(?::${$}){0,4}:${c}|(?::${$}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4
(?::(?:(?::${$}){0,5}:${c}|(?::${$}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4
)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1
`.replace(/\s*\/\/.*$/gm,"").replace(/\n/g,"").trim(),n=new RegExp(`(?:^${c}$)|(?:^${x}$)`),v=new RegExp(`^${c}$`),r=new RegExp(`^${x}$`),g=e=>e&&e.exact?n:new RegExp(`(?:${d(e)}${c}${d(e)})|(?:${d(e)}${x}${d(e)})`,"g");g.v4=e=>e&&e.exact?v:new RegExp(`${d(e)}${c}${d(e)}`,"g");g.v6=e=>e&&e.exact?r:new RegExp(`${d(e)}${x}${d(e)}`,"g");export{g as i};
