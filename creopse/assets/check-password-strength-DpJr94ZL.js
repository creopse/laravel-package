import{e as m}from"./escape-string-regexp-BaJN9MlJ.js";const d=[{id:0,value:"Too weak",minDiversity:0,minLength:0},{id:1,value:"Weak",minDiversity:2,minLength:8},{id:2,value:"Medium",minDiversity:4,minLength:10},{id:3,value:"Strong",minDiversity:4,minLength:12}],h=(s,t=d,n)=>{t[0].minDiversity=0,t[0].minLength=0;const r=s??"",a=[{key:"lowercase",regex:"[a-z]"},{key:"uppercase",regex:"[A-Z]"},{key:"number",regex:"[0-9]"},{key:"symbol",regex:n?`[${m(n)}]`:"[^a-zA-Z0-9]"}];let i={};i.contains=a.filter(e=>new RegExp(`${e.regex}`).test(r)).map(e=>e.key),i.length=r.length;let g=t.filter(e=>i.contains.length>=e.minDiversity).filter(e=>i.length>=e.minLength).sort((e,l)=>l.id-e.id).map(e=>({id:e.id,value:e.value}));return Object.assign(i,g[0]),i};export{h as p};
