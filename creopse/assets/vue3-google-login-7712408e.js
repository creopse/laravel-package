import{d as C,aH as _,b as L,o as I,c as y,Q as v,r as T,w as q}from"./vue_runtime-core-4f5fb440.js";import{a as h,r as E,u}from"./vue_reactivity-852d8377.js";import{a as N}from"./vue_shared-7dcc3b7f.js";var g={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid"};const c=h({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:g.defaultButtonConfig,callback:()=>{},error:null}),s=h({apiLoaded:!1,apiLoadIntitited:!1}),j=e=>{try{const o=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),t=decodeURIComponent(atob(o).split("").map(function(i){return"%"+("00"+i.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(t)}catch{throw"JWT provided is invalid"}},k=new Promise(e=>{const o=typeof window<"u";if(!s.apiLoadIntitited&&o){const t=document.createElement("script");s.apiLoadIntitited=!0,t.addEventListener("load",()=>{s.apiLoaded=!0,e(window.google)}),t.src=g.library,t.async=!0,t.defer=!0,document.head.appendChild(t)}}),f=e=>{s.apiLoadIntitited?s.apiLoaded?e(window.google):q(()=>s.apiLoaded,o=>{o&&e(window.google)}):k.then(o=>{e(o)})},O=(e,o,t,i)=>{if(!e.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");f(()=>{((n,p,d,a,r)=>{if(r){const w=n.callback;n.callback=m=>{m.credential?w&&w(m):r(m)}}window.google.accounts.id.initialize(n);const l=p.value;l&&!a&&window.google.accounts.id.renderButton(l,d)})(e,o,t.buttonConfig,i,t.error),t.prompt&&B({clientId:t.clientId,callback:t.callback,error:t.error,autoLogin:t.autoLogin})})},S=e=>new Promise((o,t)=>{f(i=>{if(!(e&&e.clientId||c.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");i.accounts.oauth2.initCodeClient({client_id:e&&e.clientId||c.clientId||"",scope:g.scopes,ux_mode:"popup",callback:n=>{n.code?o(n):t(n)},error_callback:n=>{t(n)}}).requestCode()})}),x=e=>new Promise((o,t)=>{f(i=>{if(!(e&&e.clientId||c.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");i.accounts.oauth2.initTokenClient({client_id:e&&e.clientId||c.clientId||"",scope:g.scopes,callback:n=>{n.access_token?o(n):t(n)},error_callback:n=>{t(n)}}).requestAccessToken()})}),B=e=>{if(!e&&(e={}),!e.clientId&&!c.clientId)throw new Error("clientId is required");const o={};return e.clientId&&(o.client_id=e.clientId),!e.clientId&&c.clientId&&(o.client_id=c.clientId),e.context&&(o.context=e.context),e.autoLogin!=null&&(o.auto_select=e.autoLogin),e.cancelOnTapOutside!=null&&(o.cancel_on_tap_outside=e.cancelOnTapOutside),new Promise((t,i)=>{o.callback=n=>{e&&e.callback&&e.callback(n),n.credential?t(n):i(n)},f(n=>{n.accounts.id.initialize(o),n.accounts.id.prompt(p=>{e&&e.onNotification&&e.onNotification(p),(d=>{const a=d.notification;let r="";a.isNotDisplayed()&&(r=a.getNotDisplayedReason()==="suppressed_by_user"?"Prompt was suppressed by user'. Refer https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown for more info":`Prompt was not displayed, reason for not displaying: ${a.getNotDisplayedReason()}`),a.isSkippedMoment()&&(r=`Prompt was skipped, reason for skipping: ${a.getSkippedReason()}`),r.length&&(d.error?d.error(r):d.reject(r))})({notification:p,reject:i,error:e&&e.error})})})})};var b=C({__name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(e){const o=e,t=!!_().default,i=((d,a)=>{const r={...d};for(const l in a)a[l]!==void 0&&a[l]!==null&&(r[l]=a[l]);return r})(c,o),n={client_id:i.clientId||null,auto_select:i.autoLogin||!1,callback:i.callback,...i.idConfiguration},p=E();return L(()=>{O(n,p,i,t),o.popupType&&!t&&console.warn("Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!")}),(d,a)=>(I(),y("div",{class:N(["g-btn-wrapper",[!u(s).apiLoaded&&"api-loading"]]),onClick:a[0]||(a[0]=r=>u(t)&&void(u(i).popupType==="TOKEN"?x({clientId:i.clientId}).then(l=>{i.callback&&i.callback(l)}).catch(l=>{i.error&&i.error(l)}):S({clientId:i.clientId}).then(l=>{i.callback&&i.callback(l)}).catch(l=>{i.error&&i.error(l)})))},[u(t)?v("v-if",!0):(I(),y("span",{key:0,ref_key:"buttonRef",ref:p,class:"g-btn"},null,512)),T(d.$slots,"default")],2))}});(function(e,o){o===void 0&&(o={});var t=o.insertAt;if(e&&typeof document<"u"){var i=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css",t==="top"&&i.firstChild?i.insertBefore(n,i.firstChild):i.appendChild(n),n.styleSheet?n.styleSheet.cssText=e:n.appendChild(document.createTextNode(e))}})(`
.g-btn-wrapper[data-v-5e610566] {
  display: inline-block;
}
.g-btn-wrapper.api-loading[data-v-5e610566] {
  opacity: 0.5;
  pointer-events: none;
}
`),b.__scopeId="data-v-5e610566",b.__file="src/plugin/GoogleLogin.vue";var D={install:(e,o)=>{o&&(t=>{t.clientId&&(c.clientId=t.clientId),t.popupType&&(c.popupType=t.popupType),t.prompt!=null&&(c.prompt=t.prompt),t.autoLogin!=null&&(c.autoLogin=t.autoLogin),t.idConfiguration&&(c.idConfiguration=t.idConfiguration),t.buttonConfig&&(c.buttonConfig=t.buttonConfig),t.callback&&(c.callback=t.callback)})(o),k.then(()=>{if(o.clientId){const t={client_id:o.clientId,auto_select:o.autoLogin===!0,callback:o.callback,...o.idConfiguration};window.google.accounts.id.initialize(t),o.prompt&&window.google.accounts.id.prompt()}}),e.component("GoogleLogin",b)}};export{D as v,j as w};
