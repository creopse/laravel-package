import{i as h}from"./ckeditor_ckeditor5-vue-D9YIFk5Z.js";import{M as B}from"./googlemaps_markerclusterer-BKEtnCRL.js";const W=e=>{let t=!1,o;return()=>(t||(t=!0,o=e()),o)};class k{static isServer(){return typeof document>"u"}}function G(e){const t=document.createElement("SCRIPT");if(typeof e!="object")throw new Error("options should  be an object");Array.prototype.isPrototypeOf(e.libraries)&&(e.libraries=e.libraries.join(",")),e.v||(e.v=3.47),e.callback="vueGoogleMapsInit";let s="https://maps.googleapis.com/maps/api/js?"+Object.keys(e).map(r=>encodeURIComponent(r)+"="+encodeURIComponent(e[r])).join("&");return t.setAttribute("src",s),t.setAttribute("async",""),t.setAttribute("defer",""),t}let z=!1;function F(e){if(!k.isServer()){if(z)throw new Error("You already started the loading of google maps");{z=!0;const t=G(e);document.head.appendChild(t)}}}const S=(e,t,o)=>{for(let s of o){const r=`on${s.charAt(0).toUpperCase()}${s.slice(1)}`.replace(/[-_]+(.)?/g,(a,n)=>n?n.toUpperCase():"");e.$props[r]||e.$attrs[r]?t.addListener(s,a=>{e.$emit(s,a)}):(e.$gmapOptions.autobindAllEvents||e.$attrs[s])&&t.addListener(s,a=>{e.$emit(s,a)})}};function R(e,t,o,s=!1){let r=!1;function a(){r||(r=!0,e.$nextTick(()=>{r=!1,o()}))}for(let n of t)e.$watch(n,a,{immediate:s})}class C{static capitalizeFirstLetter(t){return t.charAt(0).toUpperCase()+t.slice(1)}}function y(e,t){return Object.keys(t).reduce((o,s)=>(e[s]!==void 0&&(o[s]=e[s]),o),{})}function j(e,t,o){for(let s in o){let{twoWay:r,type:a,trackProperties:n,noBind:i}=o[s];if(i)continue;const c="set"+C.capitalizeFirstLetter(s),g="get"+C.capitalizeFirstLetter(s),u=s.toLowerCase()+"_changed",l=e[s];if(typeof t[c]>"u")throw new Error(`${c} is not a method of (the Maps object corresponding to) ${e.$options._componentTag}`);a!==Object||!n?e.$watch(s,()=>{const m=e[s];t[c](m)},{immediate:typeof l<"u",deep:a===Object}):R(e,n.map(m=>`${s}.${m}`),()=>{t[c](e[s])},e[s]!==void 0),r&&(e.$gmapOptions.autobindAllEvents||e.$attrs[u])&&t.addListener(u,()=>{e.$emit(u,t[g]())})}}const U={inject:{$mapPromise:{default:"abcdef"}},provide(){return this.$mapPromise.then(e=>{this.$map=e}),{}}};function p(e){const{mappedProps:t,name:o,ctr:s,ctrArgs:r,events:a,beforeCreate:n,afterCreate:i,props:c,...g}=e,u=`$${o}Promise`,l=`$${o}Object`;return q(!(g.props instanceof Array),"`props` should be an object, not Array"),{...typeof GENERATE_DOC<"u"?{$vgmOptions:e}:{},mixins:[U],props:{...c,...O(t)},render(){return""},provide(){const m=this.$mapPromise.then(f=>{this.$map=f;const d={...this.options,map:f,...y(this,t)};if(delete d.options,n){const P=n.bind(this)(d);if(P instanceof Promise)return P.then(()=>({options:d}))}return{options:d}}).then(({options:f})=>{const d=s();return this[l]=r?new(Function.prototype.bind.call(d,null,...r(f,y(this,c||{})))):new d(f),j(this,this[l],t),S(this,this[l],a),i&&i.bind(this)(this[l]),this[l]});return this[u]=m,{[u]:m}},unmounted(){this[l]&&this[l].setMap&&this[l].setMap(null)},...g}}function q(e,t){if(!e)throw new Error(t)}function O(e){return Object.entries(e).map(([t,o])=>{const s={};return"type"in o&&(s.type=o.type),"default"in o&&(s.default=o.default),"required"in o&&(s.required=o.required),[t,s]}).reduce((t,[o,s])=>(t[o]=s,t),{})}const x={draggable:{type:Boolean},editable:{type:Boolean},options:{twoWay:!1,type:Object},path:{type:Array,twoWay:!0}},T=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],H=p({mappedProps:x,props:{deepWatch:{type:Boolean,default:!1}},events:T,name:"polyline",ctr:()=>google.maps.Polyline,afterCreate(){let e=()=>{};this.$watch("path",t=>{if(t){e(),this.$polylineObject.setPath(t);const o=this.$polylineObject.getPath(),s=[],r=()=>{this.$emit("path_changed",this.$polylineObject.getPath())};s.push([o,o.addListener("insert_at",r)]),s.push([o,o.addListener("remove_at",r)]),s.push([o,o.addListener("set_at",r)]),e=()=>{s.map(([a,n])=>google.maps.event.removeListener(n))}}},{deep:this.deepWatch,immediate:!0})}}),D={draggable:{type:Boolean},editable:{type:Boolean},options:{type:Object},path:{type:Array,twoWay:!0,noBind:!0},paths:{type:Array,twoWay:!0,noBind:!0}},Z=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],Y=p({props:{deepWatch:{type:Boolean,default:!1}},events:Z,mappedProps:D,name:"polygon",ctr:()=>google.maps.Polygon,beforeCreate(e){e.path||delete e.path,e.paths||delete e.paths},afterCreate(e){let t=()=>{};this.$watch("paths",o=>{if(o){t(),e.setPaths(o);const s=()=>{this.$emit("paths_changed",e.getPaths())},r=[],a=e.getPaths();for(let n=0;n<a.getLength();n++){let i=a.getAt(n);r.push([i,i.addListener("insert_at",s)]),r.push([i,i.addListener("remove_at",s)]),r.push([i,i.addListener("set_at",s)])}r.push([a,a.addListener("insert_at",s)]),r.push([a,a.addListener("remove_at",s)]),r.push([a,a.addListener("set_at",s)]),t=()=>{r.map(([n,i])=>google.maps.event.removeListener(i))}}},{deep:this.deepWatch,immediate:!0}),this.$watch("path",o=>{if(o){t(),e.setPaths(o);const s=e.getPath(),r=[],a=()=>{this.$emit("path_changed",e.getPath())};r.push([s,s.addListener("insert_at",a)]),r.push([s,s.addListener("remove_at",a)]),r.push([s,s.addListener("set_at",a)]),t=()=>{r.map(([n,i])=>google.maps.event.removeListener(i))}}},{deep:this.deepWatch,immediate:!0})}}),J={center:{type:Object,twoWay:!0,required:!0},radius:{type:Number,twoWay:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},options:{type:Object,twoWay:!1}},K=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],Q=p({mappedProps:J,name:"circle",ctr:()=>google.maps.Circle,events:K}),X={bounds:{type:Object,twoWay:!0},draggable:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},options:{type:Object,twoWay:!1}},I=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],V=p({mappedProps:X,name:"rectangle",ctr:()=>google.maps.Rectangle,events:I}),$=(e,t)=>{const o=e.__vccOpts||e;for(const[s,r]of t)o[s]=r;return o},ee={animation:{twoWay:!0,type:Number},attribution:{type:Object},clickable:{type:Boolean,twoWay:!0,default:!0},cursor:{type:String,twoWay:!0},draggable:{type:Boolean,twoWay:!0,default:!1},icon:{twoWay:!0},label:{},opacity:{type:Number,default:1},options:{type:Object},place:{type:Object},position:{type:Object,twoWay:!0},shape:{type:Object,twoWay:!0},title:{type:String,twoWay:!0},zIndex:{type:Number,twoWay:!0},visible:{twoWay:!0,default:!0}},b=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],te=p({mappedProps:ee,events:b,name:"marker",ctr:()=>google.maps.Marker,inject:{$clusterPromise:{default:null}},emits:b,unmounted(){this.$markerObject&&(this.$clusterObject?this.$clusterObject.removeMarker(this.$markerObject,!0):this.$markerObject.setMap(null))},beforeCreate(e){return this.$clusterPromise&&(e.map=null),this.$clusterPromise},afterCreate(e){b.forEach(t=>{e.addListener(t,o=>{this.$emit(t,o)})}),this.$clusterPromise&&this.$clusterPromise.then(t=>{this.$clusterObject=t,t.addMarker(e)})}}),{renderSlot:se,openBlock:oe,createElementBlock:re}=await h("vue");function ae(e,t,o,s,r,a){return oe(),re("div",{onClick:t[0]||(t[0]=()=>{console.log("sdfsd")})},[se(e.$slots,"default")])}const ne=$(te,[["render",ae]]),w={maxZoom:{type:Number,twoWay:!1},batchSizeIE:{type:Number,twoWay:!1},calculator:{type:Function,twoWay:!1},enableRetinaIcons:{type:Boolean,twoWay:!1},gridSize:{type:Number,twoWay:!1},ignoreHidden:{type:Boolean,twoWay:!1},imageExtension:{type:String,twoWay:!1},imagePath:{type:String,twoWay:!1},imageSizes:{type:Array,twoWay:!1},minimumClusterSize:{type:Number,twoWay:!1},styles:{type:Array,twoWay:!1},zoomOnClick:{type:Boolean,twoWay:!1}},ie=["click","rightclick","dblclick","drag","dragstart","dragend","mouseup","mousedown","mouseover","mouseout"],ce=p({mappedProps:w,events:ie,name:"cluster",ctr:()=>{if(typeof B>"u"){const e="MarkerClusterer is not installed!";throw console.error(e),new Error(e)}return B},ctrArgs:({map:e,...t})=>[e,[],t],afterCreate(e){const t=()=>{const o=e.getMarkers();e.clearMarkers(),e.addMarkers(o)};for(let o in w)w[o].twoWay&&this.$on(o.toLowerCase()+"_changed",t)},updated(){this.$clusterObject&&this.$clusterObject.repaint()},beforeUnmount(){this.$children&&this.$children.length&&this.$children.forEach(e=>{e.$clusterObject===this.$clusterObject&&(e.$clusterObject=null)}),this.$clusterObject&&this.$clusterObject.clearMarkers()}}),{renderSlot:le,openBlock:pe,createElementBlock:de}=await h("vue");function ue(e,t,o,s,r,a){return pe(),de("div",null,[le(e.$slots,"default")])}const me=$(ce,[["render",ue]]),he={options:{type:Object,required:!1,default(){return{}}},position:{type:Object,twoWay:!0},zIndex:{type:Number,twoWay:!0}},fe=["domready","click","closeclick","content_changed"],$e=p({mappedProps:he,events:fe,name:"infoWindow",ctr:()=>google.maps.InfoWindow,props:{opened:{type:Boolean,default:!0}},inject:{$markerPromise:{default:null}},mounted(){const e=this.$refs.infoWindow;e.parentNode.removeChild(e)},beforeCreate(e){if(e.content=this.$refs.infoWindow,this.$markerPromise)return delete e.position,this.$markerPromise.then(t=>(this.$markerObject=t,t))},emits:["closeclick"],methods:{_openInfoWindow(){this.$infoWindowObject.close(),this.opened?this.$infoWindowObject.open(this.$map,this.$markerObject):this.$emit("closeclick")}},afterCreate(){this._openInfoWindow(),this.$watch("opened",()=>{this._openInfoWindow()})}}),{renderSlot:ge,openBlock:ye,createElementBlock:be}=await h("vue"),we={ref:"infoWindow"};function _e(e,t,o,s,r,a){return ye(),be("div",we,[ge(e.$slots,"default")],512)}const ve=$($e,[["render",_e]]),ke={props:["resizeBus"],data(){return{_actualResizeBus:null}},created(){typeof this.resizeBus>"u"?this.$data._actualResizeBus=this.$gmapDefaultResizeBus:this.$data._actualResizeBus=this.resizeBus},methods:{_resizeCallback(){this.resize()},isFunction(e){return e&&{}.toString.call(e)==="[object Function]"},_delayedResizeCallback(){this.$nextTick(()=>this._resizeCallback())}},watch:{resizeBus(e){this.$data._actualResizeBus=e},"$data._actualResizeBus"(e,t){t&&t.$off("resize",this._delayedResizeCallback)}},unmounted(){this.$data._actualResizeBus&&this.isFunction(this.$data._actualResizeBus.$off)&&this.$data._actualResizeBus.$off("resize",this._delayedResizeCallback)}};function je(e){let t=0;e(()=>{t+=1},()=>{t=Math.max(0,t-1)},()=>t===0)}const _={center:{required:!0,twoWay:!0,type:Object,noBind:!0},zoom:{required:!1,twoWay:!0,type:Number,noBind:!0},heading:{type:Number,twoWay:!0},mapTypeId:{twoWay:!0,type:String},tilt:{twoWay:!0,type:Number},options:{type:Object,default(){return{}}}},L=["bounds_changed","click","dblclick","drag","dragend","dragstart","idle","mousemove","mouseout","mouseover","resize","rightclick","tilesloaded"],Oe=["panBy","panTo","panToBounds","fitBounds"].reduce((e,t)=>(e[t]=function(){this.$mapObject&&this.$mapObject[t].apply(this.$mapObject,arguments)},e),{}),Pe={resize(){this.$mapObject&&google.maps.event.trigger(this.$mapObject,"resize")},resizePreserveCenter(){if(!this.$mapObject)return;const e=this.$mapObject.getCenter();google.maps.event.trigger(this.$mapObject,"resize"),this.$mapObject.setCenter(e)},_resizeCallback(){this.resizePreserveCenter()}},Be={mixins:[ke],props:O({..._,...L.reduce((e,t)=>({...e,[`on${t.charAt(0).toUpperCase()}${t.slice(1)}`.replace(/[-_]+(.)?/g,(o,s)=>s?s.toUpperCase():"")]:Function}),{})}),inheritAttrs:!1,provide(){return this.$mapPromise=new Promise((e,t)=>{this.$mapPromiseDeferred={resolve:e,reject:t}}),{$mapPromise:this.$mapPromise}},emits:["center_changed","zoom_changed","bounds_changed"],computed:{finalLat(){return this.center&&typeof this.center.lat=="function"?this.center.lat():this.center.lat},finalLng(){return this.center&&typeof this.center.lng=="function"?this.center.lng():this.center.lng},finalLatLng(){return{lat:this.finalLat,lng:this.finalLng}}},watch:{zoom(e){this.$mapObject&&this.$mapObject.setZoom(e)}},mounted(){return this.$gmapApiPromiseLazy().then(()=>{const e=this.$refs["vue-map"],t={...this.options,...y(this,_)};return delete t.options,this.$mapObject=new google.maps.Map(e,t),j(this,this.$mapObject,_),S(this,this.$mapObject,L),je((o,s,r)=>{this.$mapObject.addListener("center_changed",()=>{r()&&this.$emit("center_changed",this.$mapObject.getCenter()),s()}),R(this,["finalLat","finalLng"],()=>{o(),this.$mapObject.setCenter(this.finalLatLng)})}),this.$mapObject.addListener("zoom_changed",()=>{this.$emit("zoom_changed",this.$mapObject.getZoom())}),this.$mapObject.addListener("bounds_changed",()=>{this.$emit("bounds_changed",this.$mapObject.getBounds())}),this.$mapPromiseDeferred.resolve(this.$mapObject),this.$mapObject}).catch(e=>{throw e})},methods:{...Pe,...Oe}},{normalizeStyle:We,createElementVNode:E,renderSlot:M,normalizeClass:ze,openBlock:Ce,createElementBlock:Le}=await h("vue"),Ee={class:"vue-map-hidden"};function Me(e,t,o,s,r,a){return Ce(),Le("div",{class:ze(["vue-map-container",e.$attrs.class])},[E("div",{ref:"vue-map",class:"vue-map",style:We(e.$attrs.style?e.$attrs.style:"")},null,4),E("div",Ee,[M(e.$slots,"default")]),M(e.$slots,"visible")],2)}const Ae=$(Be,[["render",Me]]),Se={options:{type:Object,twoWay:!1,default:()=>{}},data:{type:Array,twoWay:!0}},Re=[],Ne=p({mappedProps:Se,name:"heatmap",ctr:()=>google.maps.visualization.HeatmapLayer,events:Re}),Ge=e=>{const t=e.addEventListener?e.addEventListener:e.attachEvent;function o(s,r){if(s==="keydown"){const a=r;r=function(n){const i=document.getElementsByClassName("pac-item-selected").length>0;if(n.which===13&&!i){const c=document.createEvent("Event");c.keyCode=40,c.which=40,a.apply(e,[c])}a.apply(e,[n])}}t.apply(e,[s,r])}e.addEventListener=o,e.attachEvent=o},v={bounds:{type:Object},componentRestrictions:{type:Object,noBind:!0},types:{type:Array,default:function(){return[]}}},Fe={selectFirstOnEnter:{required:!1,type:Boolean,default:!1},options:{type:Object}},Ue={mounted(){this.$gmapApiPromiseLazy().then(()=>{if(this.selectFirstOnEnter&&Ge(this.$refs.input),typeof google.maps.places.Autocomplete!="function")throw new Error("google.maps.places.Autocomplete is undefined. Did you add 'places' to libraries when loading Google Maps?");const e={...y(this,v),...this.options};this.$autocomplete=new google.maps.places.Autocomplete(this.$refs.input,e),j(this,this.$autocomplete,v),this.$watch("componentRestrictions",t=>{t!==void 0&&this.$autocomplete.setComponentRestrictions(t)}),this.$autocomplete.addListener("place_changed",()=>{this.$emit("place_changed",this.$autocomplete.getPlace())})})},props:{...O(v),...Fe}},{toHandlers:qe,mergeProps:xe,openBlock:Te,createElementBlock:He}=await h("vue");function De(e,t,o,s,r,a){return Te(),He("input",xe({ref:"input"},e.$attrs,qe(e.$attrs,!0)),null,16)}const Ze=$(Ue,[["render",De]]),{createApp:A}=await h("vue");let N=null;function Qe(e,t){t={installComponents:!0,autobindAllEvents:!1,...t},N=A({data:function(){return{gmapApi:null}}});const o=A();let s=Ye(t);e.mixin({created(){this.$gmapDefaultResizeBus=o,this.$gmapOptions=t,this.$gmapApiPromiseLazy=s}}),e.$gmapDefaultResizeBus=o,e.$gmapApiPromiseLazy=s,t.installComponents&&(e.component("GMapMap",Ae),e.component("GMapMarker",ne),e.component("GMapInfoWindow",ve),e.component("GMapCluster",me),e.component("GMapPolyline",H),e.component("GMapPolygon",Y),e.component("GMapCircle",Q),e.component("GMapRectangle",V),e.component("GMapAutocomplete",Ze),e.component("GMapHeatmap",Ne))}function Ye(e){function t(){return N.gmapApi={},window.google}if(e.load)return W(()=>k.isServer()?new Promise(()=>{}).then(t):new Promise((o,s)=>{try{window.vueGoogleMapsInit=o,F(e.load)}catch(r){s(r)}}).then(t));{const o=new Promise(s=>{k.isServer()||(window.vueGoogleMapsInit=s)}).then(t);return W(()=>o)}}export{$ as _,Qe as i};
